stages:
  - test

jobs:
  include:
    - stage: test
      services:
        - postgresql
      language: python
      python: '2.7'
      install:
        - easy_install distribute
        - pip install -r requirements.txt
      env:
        - DB=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=
        - POSTGRES_DB=travis_ci_test
        - POSTGRES_HOST=localhost
      before_script:
       - psql -c 'create database travis_ci_test;' -U postgres
      script: pytest --cov --cov-report term:skip-covered
      after_success:
        - codecov
    - stage: test
      language: node_js
      node_js: 10
      script:
        - npm run grunt -- --version
        - npm run grunt -- build
    - stage: test
      language: bash
      sudo: required
      services:
        - docker
      script: |
        export IMAGE_NAME=webmole/crawler-benchmark
        docker build . -t $IMAGE_NAME:$TRAVIS_BRANCH
        if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
          docker login -u $REGISTRY_USER -p $REGISTRY_PASS
          docker push "${IMAGE_NAME}:${TRAVIS_BRANCH}"
          if [ "$TRAVIS_BRANCH" == "master" ]; then
            docker tag $IMAGE_NAME:$TRAVIS_BRANCH $IMAGE_NAME:latest
            docker push "${IMAGE_NAME}:latest"
          fi
        fi
